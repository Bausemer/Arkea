version: '2'

services:
  arkea:
    container_name: arkea
    build: 
      context: .
      dockerfile: ./apps/arkea/Dockerfile
      target: development
    command: npm run start:dev arkea
    env_file:
      - ./apps/arkea/.env 
    depends_on:
      - mongo-db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules 
    ports:
      - 3000:3000
  characters:
    container_name: characters
    build: 
      context: .
      dockerfile: ./apps/characters/Dockerfile
      target: development
    command: npm run start:dev characters
    env_file:
      - ./apps/characters/.env 
    depends_on:
      - mongo-db
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules 
  auth:
    container_name: auth
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env 
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules 
    ports:
      - 3001:3001 
  mongo-db:
    container_name: mongo-db
    image: mongo
    hostname: mongodb
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_ROOT_PASSWORD}
      MONGO_INITDB_USERNAME: ${MONGODB_DB_USER}
      MONGO_INITDB_PASSWORD: ${MONGODB_DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DB_DATABASE}
    ports:
      - ${MONGODB_PORT}:27017
    volumes:
      - ./db/mongodb/data/db/:/data/db/
      - ./db/mongodb/data/log/:/var/log/mongodb/
  rabbitmq:
    container_name: rabbit-mq
    image: rabbitmq
    ports:
      - 5672:5672